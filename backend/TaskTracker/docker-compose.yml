services:
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: tasktracker-sqlserver
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: "${DB_SA_PASSWORD}"
    ports:
      - "1433:1433"
    volumes:
      - sqlserverdata:/var/opt/mssql
    networks:
      - tasknet
    
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.5.0
    container_name: tasktracker-elasticsearch
    environment:
      discovery.type: single-node
      xpack.security.enabled: "false"
      ES_JAVA_OPTS: "-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
    volumes:
      - esdata:/usr/share/elasticsearch/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200/"]
      interval: 10s
      retries: 5
    networks:
      - tasknet

  kibana:
    image: docker.elastic.co/kibana/kibana:8.5.0
    container_name: tasktracker-kibana
    restart: unless-stopped
    environment:
      ELASTICSEARCH_HOSTS: "http://elasticsearch:9200"
    ports:
      - "5601:5601"
    depends_on:
      elasticsearch:
        condition: service_healthy
    networks:
      - tasknet

  rabbitmq:
    image: rabbitmq:3-management
    container_name: tasktracker-rabbit
    restart: unless-stopped
    ports:
      - "5672:5672"     # AMQP
      - "15672:15672"   # Management UI
    environment:
      RABBITMQ_DEFAULT_USER: "admin"
      RABBITMQ_DEFAULT_PASS: "admin"
    networks:
      - tasknet

  backend:
    build:
      context: .
      dockerfile: TaskTracker.Api/Dockerfile
    container_name: tasktracker-backend
    ports:
      - "5000:80"
    environment:
      ASPNETCORE_ENVIRONMENT: "Container"
      ASPNETCORE_URLS: "http://+:80"
    depends_on:
      sqlserver:
        condition: service_started
      elasticsearch:
        condition: service_healthy
      rabbitmq:
        condition: service_started
    volumes:
      - ./logs:/app/logs
    networks:
      - tasknet

volumes:
  sqlserverdata:
  esdata:

networks:
  tasknet: